name: CI pipeline

on: [ push, pull_request, workflow_dispatch ]

permissions: read-all

jobs:
  build:
    name: "Build ${{ matrix.os }} node${{ matrix.node-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        node-version: [ 10.x, 12.x, 14.x, 16.x ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Tooling setup

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Build and test validation

      - name: Install dependencies
        run: |
          npm ci

      - name: Build the app
        run: |
          npm run build --if-present

      - if: matrix.node-version != '10.x'
        name: Run compress tests
        run: |
          npm run test:compress

      - if: matrix.node-version != '10.x'
        name: Run mocha tests
        env:
          TERSER_TEST_ALL: 1
        run: |
          npm run test:mocha

      # Tests for node 10

      - if: matrix.node-version == '10.x'
        name: Run compress tests (Node 10.x only)
        run: |
          node --require esm test/compress.js

      - if: matrix.node-version == '10.x'
        name: Run mocha tests (Node 10.x only)
        run: |
          npm run test:mocha -- --require esm

      # Functional tests

      - if: matrix.os == 'ubuntu-latest' && matrix.node-version == '12.x'
        name: Run functional tests (Ubuntu Node 12.x only)
        run: |
          ./test/functional.sh

